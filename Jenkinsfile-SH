properties([
    parameters([
        string(defaultValue: env.BRANCH_NAME, description: '', name: 'GERRIT_BRANCH'),
        string(defaultValue: 'osm/MON', description: '', name: 'GERRIT_PROJECT'),
        string(defaultValue: env.GERRIT_REFSPEC, description: '', name: 'GERRIT_REFSPEC'),
        string(defaultValue: env.GERRIT_PATCHSET_REVISION, description: '', name: 'GERRIT_PATCHSET_REVISION'),
        string(defaultValue: 'https://osm.etsi.org/gerrit', description: '', name: 'PROJECT_URL_PREFIX'),
        booleanParam(defaultValue: false, description: '', name: 'TEST_INSTALL'),
        string(defaultValue: 'artifactory-osm', description: '', name: 'ARTIFACTORY_SERVER'),
    ])
])

pipeline {
    agent any

    environment {
        TEST_LOGFILE = 'test.log'
    }

     stages {
/*        stage("git") {
            steps {
                echo "#+#+#+#+#+#+#+#+#+#+#+#+# Enter Git"
                echo "Git: ${GIT_URL}"
                git "${GIT_URL}"
                echo "#-#-#-#-#-#-#-#-#-#-#-#-# Exit  Git"
            }
        }
*/
        stage("build") {
            steps {
                echo "#+#+#+#+#+#+#+#+#+#+#+#+# Enter build"
                sh 'python --version'
                echo " - : 'python ./build1.py'"
                sh 'python ./build1.py'
                echo "#-#-#-#-#-#-#-#-#-#-#-#-# Exit  build"
            }
        }

        stage("test") {
            steps {
                echo "#+#+#+#+#+#+#+#+#+#+#+#+# Enter test"
                echo " - : 'python ./test1.py'"
                sh 'python ./test1.py'

                echo " - : 'python ./test2.py'"
                sh 'python ./test2.py'
                echo "#-#-#-#-#-#-#-#-#-#-#-#-# Exit  test"
            }
        }
    }

    post {
        always {
                echo "#+#+#+#+#+#+#+#+#+#+#+#+# Enter always"
                echo "#-#-#-#-#-#-#-#-#-#-#-#-# Exit  always"
        }

        changed {
                echo "#+#+#+#+#+#+#+#+#+#+#+#+# Enter changed"
                echo "#-#-#-#-#-#-#-#-#-#-#-#-# Exit  changed"
        }

        failure {
                echo "#+#+#+#+#+#+#+#+#+#+#+#+# Enter failure"
                echo "#-#-#-#-#-#-#-#-#-#-#-#-# Exit  failure"
        }

        success {
                echo "#+#+#+#+#+#+#+#+#+#+#+#+# Enter success"
                echo "#-#-#-#-#-#-#-#-#-#-#-#-# Exit  success"
        }

        unstable {
                echo "#+#+#+#+#+#+#+#+#+#+#+#+# Enter unstable"
                echo "#-#-#-#-#-#-#-#-#-#-#-#-# Exit  unstable"
        }

        unsuccessful {
                echo "#+#+#+#+#+#+#+#+#+#+#+#+# Enter unsuccessful"
                echo "#-#-#-#-#-#-#-#-#-#-#-#-# Exit  unsuccessful"
        }

        cleanup {
                echo "#+#+#+#+#+#+#+#+#+#+#+#+# Enter cleanup"
                sh 'more ${TEST_LOGFILE}'
                echo "#-#-#-#-#-#-#-#-#-#-#-#-# Exit  cleanup"
        }
    }
}
